[ ca ]
default_ca              = default_CA
[ default_CA ]
dir                     = {{ mig_rabbitmq_cadir }}
certs                   = $dir
new_certs_dir           = $dir/certs
database                = $dir/index
serial                  = $dir/serial
RANDFILE                = $dir/random-bits
certificate             = {{ mig_rabbitmq_cacertcrt }}
private_key             = {{ mig_rabbitmq_cakey }}
default_days            = {{ mig_rabbitmq_certduration }}
default_crl_days        = 30
default_md              = sha256
preserve                = no
x509_extensions         = server_cert
policy                  = policy_anything

[ policy_anything ]
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[req]
distinguished_name  = req_distinguished_name

[req_distinguished_name]
countryName                     = Country Name (2 letter code)
countryName_default             = US
countryName_min                 = 2
countryName_max                 = 2
stateOrProvinceName             = State or Province Name (full name)
stateOrProvinceName_default     = Florida
localityName                    = Locality Name (eg, city)
localityName_default            = Gator Town
0.organizationName              = Organization Name (eg, company)
0.organizationName_default      = Mozilla
organizationalUnitName          = Organizational Unit Name (eg, section)
organizationalUnitName_default  = MIG
commonName                      = Common Name (eg, YOUR name)
commonName_default              = {{ mig_api_host }}
commonName_max                  = 64

[ root_ca ]
nsComment                       = "MIG Certificate Authority"
subjectKeyIdentifier            = hash
authorityKeyIdentifier          = keyid,issuer:always
basicConstraints                = critical,CA:TRUE,pathlen:1
keyUsage                        = keyCertSign, cRLSign

[v3_req]
basicConstraints    = CA:FALSE
keyUsage        = digitalSignature, keyEncipherment

[ server_cert ]
authorityKeyIdentifier  = keyid,issuer:always
issuerAltName           = issuer:copy
extendedKeyUsage        = serverAuth,clientAuth,msSGC,nsSGC
basicConstraints        = critical,CA:false
keyUsage                = digitalSignature,nonRepudiation,keyEncipherment
nsCertType              = server,client

